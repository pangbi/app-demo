<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
          http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd"

       default-autowire="byName">

    <!-- 通过注解，把URL映射到Controller上，该标签默认注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter -->
    <mvc:annotation-driven />

    <!--  annotation默认的方法映射适配器  mvc:annotation-driven注册后可以省略当前配置
    <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <bean id="handlerAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	-->

    <!-- 自动扫描controller包，在该包下的所有包以及子包都被注入 -->
    <context:component-scan base-package="com.pb.controller" />

    <!-- 定义静态资源的访问路径 满足mapping条件的，都不走action，直接到指定location的路径 -->
    <mvc:resources mapping="/js/**" location="/staticFile/js/" />
    <mvc:resources mapping="/css/**" location="/staticFile/css/" />


    <bean id="loginInteceptor" class="com.pb.inteceptor.LoginInteceptor">
        <property name="mappingURLList">
            <list>
                <value>^.*/user/.*$</value>
            </list>
        </property>
    </bean>

    <!-- mvc 拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 如果不写或则 /* 表示拦截所有 -->
            <mvc:mapping path="/**/*"/>
            <!-- 拦截器处理类 -->
            <ref bean="loginInteceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="2" />
    </bean>

    <!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory -->
    <!-- 定义jsp资源访问视图路径前缀和后缀 -->
    <bean id="jspResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 视图匹配顺序1 -->
        <property name="order" value="1"></property>
        <!-- 使用JSP页面进行输出 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--因为是对controller进行aop  所以不能写在spring-core里面，spring-core先加载
        拿不到controller包里的实例对象 无法进行代理
    -->
    <context:component-scan base-package="com.pb.aop"/>
    <!-- aspect注解生效-->
    <aop:aspectj-autoproxy proxy-target-class="true" />

    <!--需要先让spring mvc 解析注入Controller  然后dubbo解析注入Reference-->
    <!--否则 dubbo服务对象是null -->
    <!--也可以把dubbo服务调用下放到service service在root-context 中注册-->
    <!--http://blog.csdn.net/qq_16414307/article/details/50328481-->
    <beans:import resource="../consumer.xml" />

</beans>